sources:
  kafka_in:
    type: kafka
    bootstrap_servers: "192.168.91.37:9092"
    group_id: "vector-group"
    topics: ["flows"]
    decoding:
      codec: json

transforms:
  enrich_flows:
    type: remap
    inputs: [kafka_in]
    source: |
      .known = {}
      .extra = {}

      _mapping = {
        "sourceIPv4Address": {"name": "source_ip", "default": "0.0.0.0"},
        "destinationIPv4Address": {"name": "destination_ip", "default": "0.0.0.0"},
        "protocolIdentifier": {"name": "protocol_id", "default": 0},
        "protocolName": {"name": "protocol_name", "default": "NA"},
        "sourceTransportPort": {"name": "source_port", "default": 0},
        "destinationTransportPort": {"name": "destination_port", "default": 0},
        "packetDeltaCount": {"name": "packets", "default": 0},
        "octetDeltaCount": {"name": "bytes", "default": 0}
      }

      for key in keys!(.) {
        if exists(_mapping, key) {
          meta = _mapping[key]
          .known[meta.name] = get!(., key) ?? meta.default
        } else {
          .extra[key] = get!(., key)
        }
      }

      .known.date = format_timestamp!(now(), "%Y-%m-%d")
      .known.time_inserted_ns = to_unix_timestamp!(now(), "nanoseconds")
      .known.extra_fields = .extra
      . = .known

sinks:
  kafka_out:
    type: kafka
    inputs: [enrich_flows]
    bootstrap_servers: "192.168.91.37:9092"
    topic: "enriched-flows"
    encoding:
      codec: json
