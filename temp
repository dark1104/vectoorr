sources:
  kafka_in:
    type: kafka
    bootstrap_servers: "192.168.91.37:9092"
    group_id: "vector-group"
    topics: ["flows"]
    decoding:
      codec: json

transforms:
  enrich_flows:
    type: remap
    inputs: [kafka_in]
    source: |
      # Define field mappings inline
      _map = {
        "sourceIPv4Address": {"target": "source_ip", "default": "0.0.0.0"},
        "destinationIPv4Address": {"target": "destination_ip", "default": "0.0.0.0"},
        "protocolIdentifier": {"target": "protocol_id", "default": 0},
        "protocolName": {"target": "protocol_name", "default": "NA"},
        "sourceTransportPort": {"target": "source_port", "default": 0},
        "destinationTransportPort": {"target": "destination_port", "default": 0},
        "packetDeltaCount": {"target": "packets", "default": 0},
        "octetDeltaCount": {"target": "bytes", "default": 0}
      }

      enriched = {}

      for key in keys!(.) {
        if exists(_map, key) {
          entry = _map[key]
          enriched[entry.target] = get!(., key) ?? entry.default
        }
      }

      enriched.date = format_timestamp!(now(), "%Y-%m-%d")
      enriched.time_inserted_ns = to_unix_timestamp!(now(), "nanoseconds")

      # Correct way: merge enriched into the current event
      merge!(., enriched)

sinks:
  kafka_out:
    type: kafka
    inputs: [enrich_flows]
    bootstrap_servers: "192.168.91.37:9092"
    topic: "enriched-flows"
    encoding:
      codec: json
